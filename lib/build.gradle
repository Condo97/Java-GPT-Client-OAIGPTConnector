/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.1.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'maven-publish'
}

group = 'com.github.condo97'
version = '1.0.0'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    mavenLocal()
}

dependencies {
    // Dotenv for env
    implementation 'io.github.cdimascio:java-dotenv:5.2.2'

    // Javalin for HTTPS server
    implementation 'com.sparkjava:spark-core:2.9.4'

    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:31.1-jre'

    // Logging for Spark
    implementation 'org.apache.logging.log4j:log4j:2.20.0'
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.20.0'

    // Jackson for JSONs
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.0.1'

    // MySQL Connector
    implementation 'mysql:mysql-connector-java:8.0.30'

    // java-jwt for JWT
    implementation 'com.auth0:java-jwt:4.4.0'

//    // Httpson for handling HTTPS requests with JsonNode and Jackson
//    implementation 'com.github.condo97:Httpson:1.0.0'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

// This enabled a bunch more publishing tasks when run the first time
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            setArtifactId "OAIGPTConnector"
        }
    }
}
